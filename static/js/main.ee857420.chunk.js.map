{"version":3,"sources":["Colors.js","App.js","reportWebVitals.js","index.js"],"names":["COLORS_ARRAY","App","useState","quote","setQuote","author","setauthor","quotesArray","setQuotesArray","accentColor","setaccentColor","dataBaseQuotes","a","fetch","response","json","data","quotes","useEffect","className","style","backgroundColor","id","color","icon","faQuoteLeft","fontSize","href","encodeURI","target","rel","faTwitter","onClick","randomInteger","Math","floor","random","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAqDeA,G,MArDM,CACnB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,Y,8BCmBaC,MA3Df,WAAgB,IAAD,EACaC,mBAAS,gBADtB,mBACNC,EADM,KACCC,EADD,OAEeF,mBAAS,YAFxB,mBAENG,EAFM,KAEEC,EAFF,OAGyBJ,mBAAS,IAHlC,mBAGNK,EAHM,KAGOC,EAHP,OAIyBN,mBAAS,QAJlC,mBAINO,EAJM,KAIOC,EAJP,KAMPC,EAAc,uCAAG,8BAAAC,EAAA,sEACEC,MATzB,0IAQuB,cACfC,EADe,gBAEFA,EAASC,OAFP,OAEfC,EAFe,OAGrBR,EAAeQ,EAAKC,QAHC,2CAAH,qDAiBpB,OAXAC,qBAAU,WACRP,MACC,IAUD,qBAAKQ,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAaC,MAAO,CAAEC,gBAAiBZ,GAAzD,SACE,sBAAKa,GAAG,YAAR,UACE,oBAAGA,GAAG,OAAOF,MAAO,CAAEG,MAAOd,GAA7B,UACE,cAAC,IAAD,CAAiBe,KAAMC,MADzB,IAC0CtB,EAD1C,OAGA,oBAAGmB,GAAG,SAASF,MAAO,CAAEM,SAAU,OAAQH,MAAOd,GAAjD,eACKJ,KAEL,sBAAKc,UAAU,YAAf,UACE,mBACEQ,KAAMC,UAAU,8CAAD,OACiCzB,EADjC,aAC2CE,IAE1DiB,GAAG,cACHF,MAAO,CAAEC,gBAAiBZ,GAC1BoB,OAAO,SACPC,IAAI,aAPN,SASE,cAAC,IAAD,CAAiBN,KAAMO,QAEzB,wBACET,GAAG,YACHU,QA/BY,WACtB,IAAIC,EAAgBC,KAAKC,MAAMD,KAAKE,SAAW7B,EAAY8B,QAC3D3B,EAAeV,EAAaiC,IAC5B7B,EAASG,EAAY0B,GAAe9B,OACpCG,EAAUC,EAAY0B,GAAe5B,SA4B3Be,MAAO,CAAEC,gBAAiBZ,GAH5B,kCC3CG6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ee857420.chunk.js","sourcesContent":["const COLORS_ARRAY = [\r\n  \"#FF6633\",\r\n  \"#FFB399\",\r\n  \"#FF33FF\",\r\n  \"#FFFF99\",\r\n  \"#00B3E6\",\r\n  \"#E6B333\",\r\n  \"#3366E6\",\r\n  \"#999966\",\r\n  \"#99FF99\",\r\n  \"#B34D4D\",\r\n  \"#80B300\",\r\n  \"#809900\",\r\n  \"#E6B3B3\",\r\n  \"#6680B3\",\r\n  \"#66991A\",\r\n  \"#FF99E6\",\r\n  \"#CCFF1A\",\r\n  \"#FF1A66\",\r\n  \"#E6331A\",\r\n  \"#33FFCC\",\r\n  \"#66994D\",\r\n  \"#B366CC\",\r\n  \"#4D8000\",\r\n  \"#B33300\",\r\n  \"#CC80CC\",\r\n  \"#66664D\",\r\n  \"#991AFF\",\r\n  \"#E666FF\",\r\n  \"#4DB3FF\",\r\n  \"#1AB399\",\r\n  \"#E666B3\",\r\n  \"#33991A\",\r\n  \"#CC9999\",\r\n  \"#B3B31A\",\r\n  \"#00E680\",\r\n  \"#4D8066\",\r\n  \"#809980\",\r\n  \"#E6FF80\",\r\n  \"#1AFF33\",\r\n  \"#999933\",\r\n  \"#FF3380\",\r\n  \"#CCCC00\",\r\n  \"#66E64D\",\r\n  \"#4D80CC\",\r\n  \"#9900B3\",\r\n  \"#E64D66\",\r\n  \"#4DB380\",\r\n  \"#FF4D4D\",\r\n  \"#99E6E6\",\r\n  \"#6666FF\",\r\n];\r\n\r\nexport default COLORS_ARRAY;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport COLORS_ARRAY from \"./Colors\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faQuoteLeft } from \"@fortawesome/free-solid-svg-icons\";\n\nlet quotesURL =\n  \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\n\nfunction App() {\n  const [quote, setQuote] = useState(\"God is good.\");\n  const [author, setauthor] = useState(\"Adehenry\");\n  const [quotesArray, setQuotesArray] = useState(\"\");\n  const [accentColor, setaccentColor] = useState(\"#f00\");\n\n  const dataBaseQuotes = async () => {\n    const response = await fetch(quotesURL);\n    const data = await response.json();\n    setQuotesArray(data.quotes);\n  };\n\n  useEffect(() => {\n    dataBaseQuotes();\n  }, []);\n\n  const getRandomQuotes = () => {\n    let randomInteger = Math.floor(Math.random() * quotesArray.length);\n    setaccentColor(COLORS_ARRAY[randomInteger]);\n    setQuote(quotesArray[randomInteger].quote);\n    setauthor(quotesArray[randomInteger].author);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\" style={{ backgroundColor: accentColor }}>\n        <div id=\"quote-box\">\n          <p id=\"text\" style={{ color: accentColor }}>\n            <FontAwesomeIcon icon={faQuoteLeft} /> {quote}\"\n          </p>\n          <p id=\"author\" style={{ fontSize: \"16px\", color: accentColor }}>\n            - {author}\n          </p>\n          <div className=\"tweet-new\">\n            <a\n              href={encodeURI(\n                `https://www.twitter.com/intent/tweet?text=\"${quote} -${author}`\n              )}\n              id=\"tweet-quote\"\n              style={{ backgroundColor: accentColor }}\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <FontAwesomeIcon icon={faTwitter} />\n            </a>\n            <button\n              id=\"new-quote\"\n              onClick={getRandomQuotes}\n              style={{ backgroundColor: accentColor }}\n            >\n              New Quote\n            </button>\n          </div>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}